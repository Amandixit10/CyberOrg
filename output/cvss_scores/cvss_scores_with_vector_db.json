[
  {
    "description": "1) AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed JWEDecryptionFailed would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). [CVE-2021-29443]\n\n2) AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed JWEDecryptionFailed would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). [CVE-2021-29444]\n\n3) AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed JWEDecryptionFailed would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). [CVE-2021-29445]\n\n4) AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed JWEDecryptionFailed would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). [CVE-2021-29446]\n\nVendor Affected Components:\n[Vulnerabilities 1 - 3]\nNode.js Package: jose \u2264 3.11.3\n\n[Vulnerability 4]\nNode.js Package: jose 1.x \u2264 1.28.0\nNode.js Package: jose 2.x \u2264 2.0.4\nNode.js Package: jose 3.x \u2264 3.11.3",
    "base_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N",
    "base_score": 7.7,
    "temporal_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N/E:X/RL:T/RC:C",
    "temporal_score": 7.4,
    "environmental_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N/CR:H/IR:M/AR:H/MAV:N/MAC:L/MPR:L/MUI:N/MS:X/MC:N/MI:X/MA:N",
    "environmental_score": 7.7
  },
  {
    "description": "A vulnerability allows remote attackers to disclose sensitive information. User interaction is required to exploit this vulnerability and the specific flaw exists within the WXAM decoder. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. [CVE-2021-27247]\n\nVendor Affected Components:\nWeChat &lt; 3.1.0",
    "base_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "base_score": 7.5,
    "temporal_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:F/RL:W/RC:C",
    "temporal_score": 7.1,
    "environmental_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/CR:L/IR:M/AR:L/MAV:X/MAC:H/MPR:X/MUI:N/MS:C/MC:L/MI:H/MA:L",
    "environmental_score": 7.5
  },
  {
    "description": "Pi-hole is a Linux network-level advertisement and Internet tracker blocking application. The Stored XSS exists in the Pi-hole Admin portal, which can be exploited by the malicious actor with the network access to DNS server. [CVE-2021-29448]\n\nVendor Affected Components:\nPi-hole Admin Interface \u2264 5.4",
    "base_vector": "CVSS:3.1/AV:P/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:L",
    "base_score": 3.4,
    "temporal_vector": "CVSS:3.1/AV:P/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:L/E:H/RL:X/RC:X",
    "temporal_score": 3.4,
    "environmental_vector": "CVSS:3.1/AV:P/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:L/CR:M/IR:M/AR:L/MAV:P/MAC:L/MPR:N/MUI:X/MS:C/MC:L/MI:N/MA:H",
    "environmental_score": 4.1
  },
  {
    "description": "1) Sydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to disk space exhaustion and denial of service. Sydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service. [CVE-2021-29430] \n\nMitigating Factor: This affects any server which accepts registration requests from untrusted clients.\n\n2) Sydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting. It is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration. [CVE-2021-29431]\n\n3) A malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example. [CVE-2021-29432]\n\n4) Missing input validation of some parameters on the endpoints used to confirm third-party identifiers could cause excessive use of disk space and memory leading to resource exhaustion. [CVE-2021-29433]\n\nVendor Affected Components:\nPython Package: matrix-sydent \u2264 2.2.0",
    "base_vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:H",
    "base_score": 5.9,
    "temporal_vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:H/E:X/RL:X/RC:R",
    "temporal_score": 5.7,
    "environmental_vector": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:H/CR:L/IR:H/AR:L/MAV:A/MAC:H/MPR:N/MUI:X/MS:X/MC:X/MI:X/MA:X",
    "environmental_score": 5.0
  },
  {
    "description": "The Nextcloud dialogs library before 3.2.1 did insufficiently escape text input passed to a toast. If your application displays toasts with user-supplied input, this could lead to a XSS vulnerability. [CVE-2021-29438]\n\nVendor Affected Components:\nNode.js Package: @nextcloud/dialogs \u2264 3.1.1",
    "base_vector": "CVSS:3.1/AV:P/AC:L/PR:H/UI:N/S:C/C:L/I:H/A:L",
    "base_score": 6.3,
    "temporal_vector": "CVSS:3.1/AV:P/AC:L/PR:H/UI:N/S:C/C:L/I:H/A:L/E:H/RL:W/RC:U",
    "temporal_score": 5.7,
    "environmental_vector": "CVSS:3.1/AV:P/AC:L/PR:H/UI:N/S:C/C:L/I:H/A:L/CR:M/IR:M/AR:L/MAV:L/MAC:H/MPR:X/MUI:R/MS:X/MC:X/MI:N/MA:N",
    "environmental_score": 2.3
  },
  {
    "description": "1) Micrometer versions 1.2.x have reached their end of life on October 1st, 2019.\n\n2) Micrometer versions 1.4.x have reached their end of life on April 24th, 2020.\n\nVendor Affected Components:\nMicrometer 1.2.x\nMicrometer 1.4.x",
    "base_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:H",
    "base_score": 6.7,
    "temporal_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:H/E:P/RL:U/RC:X",
    "temporal_score": 6.3,
    "environmental_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:H/A:H/CR:H/IR:M/AR:L/MAV:N/MAC:H/MPR:X/MUI:R/MS:X/MC:X/MI:H/MA:H",
    "environmental_score": 5.6
  }
]